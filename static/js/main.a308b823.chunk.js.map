{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsWithUsersAndComments","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"i28IAEaA,EAAc,SAAC,GAAD,QAAGC,QAC5BC,EADyB,EACzBA,KACAC,EAFyB,EAEzBA,MACAC,EAHyB,EAGzBA,KAHyB,OAKzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGF,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCrBMG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCJrCC,G,MAAW,SAAC,GAAD,QAAGC,KACzBV,EADsB,EACtBA,KACAC,EAFsB,EAEtBA,MAFsB,OAItB,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCHQW,G,MAAW,SAAC,GAAD,QAAGC,KACzBC,EADsB,EACtBA,MACAX,EAFsB,EAEtBA,KACAQ,EAHsB,EAGtBA,KACAJ,EAJsB,EAItBA,SAJsB,OAMtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eAEAH,GAAQ,cAAC,EAAD,CAAUA,KAAMA,UAI7B,mBAAGP,UAAU,iBAAb,SACGD,IAGFI,EAASQ,OAAS,EACf,cAAC,EAAD,CAAaR,SAAUA,IAEvB,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,qCC9BGS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,W,qBCU/B,IAAMS,EAA4BC,EAAgBX,KAAI,SAAAK,GAAI,kCAC5DA,GAD4D,IAE/DF,MAXmBS,EAWDP,EAAKO,OAVhBC,EAAgBC,MAAK,SAAAX,GAAI,OAAIA,EAAKF,KAAOW,MAC3C,MAULb,UAPsBgB,EAOGV,EAAKJ,GANvBe,EAAmBC,QAAO,SAAAzB,GAAO,OAAIA,EAAQuB,SAAWA,QADjE,IAAwBA,EALHH,KAeRM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOC,QCtBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a308b823.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment: {\n  name,\n  email,\n  body,\n} }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: {\n  name,\n  email,\n} }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post: {\n  title,\n  body,\n  user,\n  comments,\n} }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        {user && <UserInfo user={user} />}\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {comments.length > 0\n      ? <CommentList comments={comments} />\n      : (\n        <>\n          <hr />\n\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )\n    }\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const postsWithUsersAndComments = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={postsWithUsersAndComments} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}